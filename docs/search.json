[{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Joe Model Batch Run","text":"can helpful perform batch replicate runs Joe Model changing stressor magnitude values fixed percentage. hypothetical scenario represents climate change can either create whole new stressor magnitude file derived empirical data contains values projected stressors future rerun model. Alternatively, may simply just want scenario number stressors increased decreased given fraction. Joe model scenario batch run function allows us . Joe model batch run function similar default Joe model function; however, includes addition special scenario file. scenario file specifies scenario names along series stressors scenario modify. code loops scenario stressor within scenario adjusts values according specified multiplier. example, multiplier 1.2 change values Temperature_adult 18C 21.6C. image shows sample hypothetical scenarios file four hypothetical scenarios.","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"setup-and-installation","dir":"Articles","previous_headings":"","what":"Setup and Installation","title":"Joe Model Batch Run","text":"time Joe Model R package hosted GitHub can installed using devtools. Hopefully near future near future package available R-CRAN standard installation loading.","code":"library(devtools) # install_github(\"essatech/JoeModelCE\") library(JoeModelCE)"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"import-data","dir":"Articles","previous_headings":"","what":"Import Data","title":"Joe Model Batch Run","text":"next step well import data Joe Model. Recall Joe Model needs stressor magnitude Excel file stressor response Excel file. special case (batch runs) also include scenarios file can imported dataframe. following file paths () loading sample datasets within R-package. application, please update file paths excel workbooks computer. Take special care ensure formatting data correct. Also ensure spelling stressor labels consistent across three input files (e.g., temperature_adults).","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"run-the-joe-model-in-batch-mode","dir":"Articles","previous_headings":"","what":"Run the Joe Model in Batch Mode","title":"Joe Model Batch Run","text":"run Joe Model batch model across scenarios outputs single consolidated dataframe called exp_dat. tutorials MC_sims Monte Carlo replicates set 3 save time (please increase application).","code":"# ?JoeModel_Run_Batch -- see help  # Run the Joe Model with batch scenarios exp_dat <- JoeModel_Run_Batch(scenarios = scenarios,                               dose = stressor_magnitude,                               sr_wb_dat = stressor_response,                               MC_sims = 3)  head(exp_dat, 3) #> # A tibble: 3 × 4 #> # Groups:   HUC, simulation [3] #>          HUC simulation    CE Scenario   #>        <int>      <int> <dbl> <chr>      #> 1 1701010201          1     0 scenario_1 #> 2 1701010201          2     0 scenario_1 #> 3 1701010201          3     0 scenario_1"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"plot-results-by-huc-watershed","dir":"Articles","previous_headings":"","what":"Plot Results By HUC (watershed)","title":"Joe Model Batch Run","text":"next code block show results can plotted across scenarios given watershed. code generate plot put loop separate plots generated watershed, printed file system saved PNG files. Results across scenario HUC","code":"#----------------------------------------------------- # Plot result for single HUC - filter by name or ID hub_sub <- exp_dat[exp_dat$HUC == 1701010204,] plot_title <- paste0(\"Watershed Name - \", 1701010204)  # Add mean and error bars (SD) library(dplyr) library(ggplot2) hub_sb <- hub_sub %>% group_by(Scenario) %>% summarise(mean = mean(CE, na.rm = TRUE),           sd = sd(CE, na.rm = TRUE))  hub_sb$lower <- hub_sb$mean - hub_sb$sd hub_sb$upper <- hub_sb$mean + hub_sb$sd  ggplot(hub_sb, aes(x = mean, y = Scenario, xmin = lower, xmax = upper)) + geom_rect(aes(xmin = 0, xmax = 0.2, ymin = -Inf, ymax = Inf),           fill = \"pink\", alpha = 0.02) + geom_rect(aes(xmin = 0.2, xmax = 0.5, ymin = -Inf, ymax = Inf),           fill = \"orange\", alpha = 0.02) + geom_rect(aes(xmin = 0.5, xmax = 0.75, ymin = -Inf, ymax = Inf),           fill = \"yellow\", alpha = 0.02) + geom_rect(aes(xmin = 0.75, xmax = 1, ymin = -Inf, ymax = Inf),           fill = \"green\", alpha = 0.02) + geom_point() + geom_errorbarh(height=.2) + ggtitle(plot_title) + xlab(\"System Capacity (0 - 1)\") + ylab(\"Recovery Scenario\") + theme_bw()"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model-batch-run.html","id":"plot-results-by-scenario","dir":"Articles","previous_headings":"","what":"Plot Results By Scenario","title":"Joe Model Batch Run","text":"second example show watersheds can plotted individual scenario. watersheds filtered convenience additional styling customization necessary application. Results across HUC scenario","code":"#----------------------------------------------------- # Plot result for single scenario sen_sub <- exp_dat[exp_dat$Scenario == \"scenario_1\",] plot_title <- paste0(\"Scenario 1 ...\")  # Add mean and error bars (SD) sen_sb <- sen_sub %>% group_by(HUC) %>% summarise(mean = mean(CE, na.rm = TRUE),           sd = sd(CE, na.rm = TRUE))  sen_sb$lower <- sen_sb$mean - sen_sb$sd sen_sb$upper <- sen_sb$mean + sen_sb$sd  sen_sb$HUC <- as.character(sen_sb$HUC)  ggplot(sen_sb, aes(x = mean, y = HUC, xmin = lower, xmax = upper)) + geom_rect(aes(xmin = 0, xmax = 0.2, ymin = -Inf, ymax = Inf),           fill = \"pink\", alpha = 0.02) + geom_rect(aes(xmin = 0.2, xmax = 0.5, ymin = -Inf, ymax = Inf),           fill = \"orange\", alpha = 0.02) + geom_rect(aes(xmin = 0.5, xmax = 0.75, ymin = -Inf, ymax = Inf),           fill = \"yellow\", alpha = 0.02) + geom_rect(aes(xmin = 0.75, xmax = 1, ymin = -Inf, ymax = Inf),           fill = \"green\", alpha = 0.02) + geom_point() + geom_errorbarh(height=.2) + ggtitle(plot_title) + xlab(\"System Capacity (0 - 1)\") + ylab(\"Recovery Scenario\") + theme_bw()"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Joe Model Overview","text":"following tutorial provides overview running Joe Model offline within R. Users following tutorial R, RStudio R package devtools installed machine.","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Joe Model Overview","text":"time Joe Model R package hosted GitHub can installed using devtools. Hopefully near future near future package available R-CRAN standard installation loading.","code":"library(devtools) # install_github(\"essatech/JoeModelCE\") library(JoeModelCE)"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"import-data","dir":"Articles","previous_headings":"","what":"Import Data","title":"Joe Model Overview","text":"two input datasets needed run Joe Model Joe Model requires two key datasets, stressor-response workbook stressor magnitude workbook. stressor-response workbook… stressor magnitude workbook…","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"stressor-response-workbook","dir":"Articles","previous_headings":"Import Data","what":"Stressor Response Workbook","title":"Joe Model Overview","text":"stressor-response Excel workbook must follow standardized format. first worksheet titled Main.","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"main-worksheet","dir":"Articles","previous_headings":"Import Data > Stressor Response Workbook","what":"Main Worksheet","title":"Joe Model Overview","text":"TODO placeholder text Table 1: ‘Main’ worksheet sample stressor-response.xlsx workbook TODO describe columns workbook Stressors Name stressor… Stressor_cat Name stressor category (relevant population model)… Interaction Can either blank NA default multiplicative, ‘Additive’ ‘Minimum’… Linked variables minimum interaction… Stress_Scale Can either 'linear' 'logarithmic'… Function Can either 'continuious' 'step'… Life_stages Can either 'fry_parr', 'alevin', 'sub_adult' 'adult',… Parameters Can blank NA (default), implys relationship system capacity linked vital rate 'survival', 'capacity'…","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"stressor-dose-response-worksheets","dir":"Articles","previous_headings":"Import Data > Stressor Response Workbook","what":"Stressor Dose-Response Worksheets","title":"Joe Model Overview","text":"TODO placeholder text stressor response Excel workbook must individual worksheets stressors Main sheet. Please ensure spelling identical Stressors column Main sheet work sheet name stressor. doese response curve provided seperate worksheet. example shows dose-response curve water temperature (C) Adult system capacity. Table 2: Example ‘Temperature’ dose-response curve data temperature (x-axis) system capacity (y-axis) TODO describe columns workbook Temperature first column name stressor… Mean System Capacity (%) next column mean system capacity (0 - 100).. SD third column standard deviation mean system capacity. useful represent uncertianty relationship. example, temperature 12C always equate system capacity exactly 90%… low.limit Lower limits cumulative system capacity… .limit Upper limits cumulative system capacity… Example Stressor-Response Curve figure shows stressor response curve. raw values stressor plotted x-axis mean system capacity showen y-axis. stressor simulation values mean system capacity drawn normal distribution mean standard deviation (error bars) bound lower upper limits (grey shading).","code":"# Load default file from Joe Model Package   filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\")   # Use the StressorResponseWorkbook() function from the JoeModelCE package to format the data and check for errors and issues   sr_wb_dat <- StressorResponseWorkbook(filename = filename_sr)   names(sr_wb_dat) #> [1] \"main_sheet\"     \"stressor_names\" \"pretty_names\"   \"sr_dat\"         #> [5] \"MInt\""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"stressor-magnitude-workbook","dir":"Articles","previous_headings":"Import Data","what":"Stressor Magnitude Workbook","title":"Joe Model Overview","text":"Shows actual values location interest… Table 3: Location data stressor-magnitude.xlsx workbook Column names follows: HUC_ID Unique (numeric) identifer location interest. Formally Hydrologial Unit Code (HUC) representing unique subbasins, can anything… NAME Name (character) given location. Note column used display purposes … Stressor Name stressor. Note mutch match spelling used stressor response workbook… Stressor_cat Name Stressor ctegory. Note mutch match spelling used stressor response workbook… Mean Mean value specific location… SD Standard deviation specific stressor location. value stressor combination resampled simulation… Distribution Resampling distribution either 'lognormal' 'normal'… Low_Limit Lower limits locaiton-speific stressor… Up_Limit Upper limits locaiton-speific stressor….","code":"# Load default file from Joe Model Package   filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\")   # Use the StressorMagnitudeWorkbook() function from the JoeModelCE package to format the data and check for errors and issues   smw <- StressorMagnitudeWorkbook(filename = filename_rm, scenario_worksheet = \"natural_unc\")   names(smw) #>  [1] \"HUC_ID\"       \"NAME\"         \"Stressor\"     \"Stressor_cat\" \"Mean\"         #>  [6] \"SD\"           \"Distribution\" \"Low_Limit\"    \"Up_Limit\"     \"Comments\""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"cumulative-system-capacity","dir":"Articles","previous_headings":"","what":"Cumulative System Capacity","title":"Joe Model Overview","text":"TODO placeholder text … Run cumulative system capacity single watershed Mean System Capacity temperature hypothetical watershed","code":"# Stressor Response Workbook object = sr_wb_dat  # Run the mean_Response() function to create response curves. # Note that this intermediate object is need throughout mean.resp.list <- mean_Response(   n.stressors = nrow(sr_wb_dat$main_sheet),   str.list = sr_wb_dat$sr_dat,   main = sr_wb_dat$main_sheet )  # Set up objects for system capacity function - for \"Temperature_adult\" f.main.df <- sr_wb_dat$main_sheet[which(sr_wb_dat$main_sheet$Stressors == \"Temperature_adult\"), ] f.stressor.df <- sr_wb_dat$sr_dat[[\"Temperature_adult\"]] f.mean.resp.list <- mean.resp.list[[which(sr_wb_dat$main_sheet$Stressors == \"Temperature_adult\")]]  # Stressor Magnitude: Make up fake data for a sample watershed (e.g., HUC_ID: 1701010208) smw_sample <- data.frame(HUC_ID = 0, NAME = \"Location Name\",                       Stressor = \"Temperature_adult\", Stressor_cat = \"Temperature\",                       Mean = 14, SD = 3, Distribution = \"normal\",                       Low_Limit = 4, Up_Limit = 20)  # ?SystemCapacity # Preview help function  test_sc <- SystemCapacity(f.dose.df = smw_sample,                           f.main.df = f.main.df,                           f.stressor.df = f.stressor.df,                           f.mean.resp.list = f.mean.resp.list,                           n.sims = 100) names(test_sc) #> [1] \"sys.cap\"  \"dose\"     \"dose.mat\"  # Look at system capacity for one variable and one stressor sys_cap <- round(test_sc$sys.cap * 100, 3) hist(sys_cap, xlab = \"Mean System Capacity (%)\")"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"joe-model","dir":"Articles","previous_headings":"","what":"Joe Model","title":"Joe Model Overview","text":"TODO placeholder text variables stressors - run full Joe Model… Mean System Capacity stressors watersheds across simulations","code":"# Import of stressor response and magnitude workbook filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\") filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\")  dose <- StressorMagnitudeWorkbook(filename = filename_rm, scenario_worksheet = \"natural_unc\") sr_wb_dat <- StressorResponseWorkbook(filename = filename_sr)  # ---------------------------------------------------------- # Run the Basic Joe Model jmr <- JoeModel_Run(dose = dose, # Stressor Magnitude Object                     sr_wb_dat = sr_wb_dat, # Stressor Response Object                     MC_sims = 10 # Number of Monte Carlo simulations                     ) names(jmr) #> [1] \"ce.df\"      \"sc.dose.df\" # ce.df = Mean system capacity for each HUC_ID for each simulation # sc.dose.df = Mean system capacity for each variable for each HUC_ID for each simulation msc <- jmr$ce.df$CE * 100 hist(msc, xlab = \"Mean System Capacity (%)\", main = NULL)"},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"components","dir":"Articles","previous_headings":"Joe Model","what":"Components","title":"Joe Model Overview","text":"TODO placeholder text","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"cumulative-effects-dataframe","dir":"Articles","previous_headings":"Joe Model > Components","what":"Cumulative Effects Dataframe","title":"Joe Model Overview","text":"TODO placeholder text","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/joe-model.html","id":"system-capacity-dose-response-dataframe","dir":"Articles","previous_headings":"Joe Model > Components","what":"System Capacity Dose-Response Dataframe","title":"Joe Model Overview","text":"TODO placeholder text","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model-batch-run.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Population Model Batch Run","text":"Run population model batch mode. population model run separately spatial unit scenario. helper function providers wrapper quickly explore alternative scenarios. Users may change population vital rates, environmental parameters (stressors) stressor-response curves batch model run.","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model-batch-run.html","id":"load-input-data","dir":"Articles","previous_headings":"","what":"Load Input Data","title":"Population Model Batch Run","text":"example load stressor-response, stressor magnitude file life cycles file. polygon geometry needed run population model. Reset filename_ point local file computer.","code":"library(JoeModelCE)      # Load the stress-response workbook     filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\")     sr_wb_dat <- StressorResponseWorkbook(filename = filename_sr)      # Load the stress-magnitude workbook     filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\")     dose <- StressorMagnitudeWorkbook(filename = filename_rm, scenario_worksheet = \"natural_unc\")      # Load the life cycle parameters     filename_lc <- system.file(\"extdata\", \"life_cycles.csv\", package = \"JoeModelCE\")     life_cycle_params <- read.csv(filename_lc)"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model-batch-run.html","id":"choose-a-target-spatial-unit","dir":"Articles","previous_headings":"","what":"Choose a Target Spatial Unit","title":"Population Model Batch Run","text":"PopulationModel_Run run function runs population model spatial units (e.g., watershed) individually. users wish run population model watersheds, can simply wrap PopulationModel_Run loop apply function. Running watersheds individually advantageous often certain parameters need tweaked various watershed subunits.","code":"# Choose target ID # In this example just use the first watershed HUC_ID <- dose$HUC_ID[1]"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model-batch-run.html","id":"run-the-population-model","dir":"Articles","previous_headings":"","what":"Run the Population Model","title":"Population Model Batch Run","text":"Next, can run population model number years n_years batch replicates MC_sims. dose stressor-magnitude data object, sr_wb_dat stressor response workbook data object, life_cycle_params life cycle parameters file target species. stressors optional argument specify whether model run subset stressors (e.g., ‘temperature’, ‘sediment’, left NA model run stressors stressor magnitude file). output data object PopulationModel_Run consist either list dataframe object. output_type argument set “full” list object returned containing abundance time series matrices batch replicate list stage without stressor variables. However, “full” output data object can cumbersome work . convenience, output_type argument can set “adults” return simple dataframe object showing abundance adults across years batch replicates. model always run without cumulative effect stressors - since comparisons always made relative baseline status quo. group variable output dataframe specifies whether model run includes stressor cumulative effect variables “ce” baseline reference conditions “baseline”.","code":"data <- PopulationModel_Run(         dose = dose,         sr_wb_dat = sr_wb_dat,         life_cycle_params = life_cycle_params,         HUC_ID = HUC_ID,         n_years = 150,         MC_sims = 5,         stressors = NA,         output_type = \"adults\"     ) #> At least one NA in stressor values array      # Review output     head(data, 3) #>   year        N MC_sim group #> 1    0 51.86293      1    ce #> 2    1 59.73891      1    ce #> 3    2 65.31180      1    ce      # Look the median adult abundance          # with stressor variables (cumulative effects)     median(data$N[which(data$group == \"ce\")], na.rm = TRUE) #> [1] 94.02069          # and without stressor variables (baseline status quo)     median(data$N[which(data$group == \"baseline\")], na.rm = TRUE) #> [1] 97.83477"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model-batch-run.html","id":"visualize-the-time-series-projections","dir":"Articles","previous_headings":"","what":"Visualize the Time Series Projections","title":"Population Model Batch Run","text":"Simple plots can included visualize trends","code":"library(ggplot2)     ggplot(data, aes(x = year, y = N, color = group)) +         stat_smooth(method=\"loess\", span=0.1, se=TRUE, aes(fill = group), alpha=0.3) +         theme_bw() +         theme(             legend.position = \"bottom\",             legend.title = element_blank(),             legend.text = element_text(size = 8),             legend.key = element_blank(),             axis.text.x = element_text(angle = 90, hjust = 1, size = 8),             axis.text.y = element_text(size = 8),             #axis.title.x = element_blank(),             #axis.title.y = element_blank(),             strip.text = element_text(size = 8)) #> `geom_smooth()` using formula 'y ~ x'"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Population Model Overview","text":"tutorial covers population model component JoeModelCE r-package. population model included extension original Joe Model leverages flexible stage-structured population modelling framework can modified different target systems. underlying population model code originally developed van der Lee Koops (2020)1 modified Dr. Kyle Wilson incorporate environmental stressors linked survivorship, capacity growth.","code":""},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"input-parameters","dir":"Articles","previous_headings":"","what":"Input parameters","title":"Population Model Overview","text":"inputs population model include key parameters defined life_cycles.csv input file. Users can adjust modify values represent species interest run model default values representing life history traits Westslope Cuttroat Trout. parameters can modified population model represents target species interest, parameters added removed. example shows life history parameters used build stage-structured population matrix model. detailed description underlying mechansics population model see van der Lee Koops (2020), note revisions made code accommodate stressors stressor-magnitude functions simular magnitude Joe Model frawork.","code":"# Install the JoeModelCE (first-time users) # library(devtools) # devtools::install_github(\"essatech/JoeModelCE\")  # Load the JoeModelCE package. library(JoeModelCE)  filename_lc <- system.file(\"extdata\", \"life_cycles.csv\", package = \"JoeModelCE\") life_cycles <- read.csv(filename_lc) print(life_cycles) #>                                              Parameters    Name  Value #> 1                                 Number of life stages  Nstage    4.0 #> 2                                        Adult capacity       k  100.0 #> 3                               Spawn events per female  events    1.0 #> 4                                 Eggs per female spawn     eps 3000.0 #> 5                                     spawning interval     int    1.0 #> 6                                          egg survival      SE    0.1 #> 7                                          yoy survival      S0    0.3 #> 8                                             sex ratio      SR    0.5 #> 9                                    Hatchling Survival  surv_1    0.3 #> 10                                    Juvenile Survival  surv_2    0.3 #> 11                                   Sub-adult Survival  surv_3    0.9 #> 12                                       Adult Survival  surv_4    0.9 #> 13                                   Years as hatchling  year_1    1.0 #> 14                                    years as juvenile  year_2    2.0 #> 15                                    years as subadult  year_3    2.0 #> 16                                       years as adult  year_4    5.0 #> 17                      egg survival compensation ratio    cr_E    1.0 #> 18                      yoy survival compensation ratio    cr_0    3.0 #> 19                hatchling survival compensation ratio    cr_1    2.5 #> 20                 juvenile survival compensation ratio    cr_2    2.0 #> 21                 subadult survival compensation ratio    cr_3    1.1 #> 22                    adult survival compensation ratio    cr_4    1.0 #> 23                                maturity as hatchling   mat_1    0.0 #> 24                                 maturity as juvenile   mat_2    0.0 #> 25                                 maturity as subadult   mat_3    0.0 #> 26                                    maturity as adult   mat_4    1.0 #> 27                          variance in eggs per female  eps_sd 1000.0 #> 28            correlation in egg fecundity through time egg_rho    0.1 #> 29 coefficient of variation in stage-specific mortality    M.cv    0.1 #> 30                correlation in mortality through time   M.rho    0.1"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"setup-the-matrix","dir":"Articles","previous_headings":"","what":"Setup the matrix","title":"Population Model Overview","text":"pop_model_setup() pop_model_matrix_elements() run first build elements needed run full population matrix model. can explore data objects generated functions include density-independent components matrix model. can see transition matrix.","code":"# Setup objects for population model pop_mod_setup <- pop_model_setup(life_cycles = life_cycles)  # Build matrix elements for population model pop_mod_mat <- pop_model_matrix_elements(pop_mod_setup = pop_mod_setup) names(pop_mod_mat) #> [1] \"projection_matrix\"      \"life_histories\"         \"life_stages_symbolic\"   #> [4] \"density_stage_symbolic\" print(pop_mod_mat$projection_matrix) #>      [,1]       [,2]      [,3]       [,4] #> [1,]  0.0 0.00000000 0.0000000 45.0000000 #> [2,]  0.3 0.23076923 0.0000000  0.0000000 #> [3,]  0.0 0.06923077 0.4736842  0.0000000 #> [4,]  0.0 0.00000000 0.4263158  0.7558057"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"calculate-simple-matrix-elements-from-the-popbio-package","dir":"Articles","previous_headings":"","what":"Calculate simple matrix elements from the popbio package","title":"Population Model Overview","text":"Running next block code optional, included demonstration purposes highlight can use functions external popbio R package generate simple matrix elements eigne analysis (e.g., lambda values, sensitivities elasticities etc). Note elements consider density-independent growth. next section project population forward accounting density-dependent growth.","code":"# Preview density-independent transition projection_matrix   A <- pop_mod_mat$projection_matrix # Assign nicknames for each stage   # snames <- c(\"egg_yoy\", \"juv\", \"subadult\", \"adult\")   # rownames(A) <- colnames(A) <- snames # Simple density-independent lambda estimate   popbio::lambda(A) #> [1] 1.211018 # Simple Eigen analysis   popbio::eigen.analysis(A)$elasticities #>           [,1]      [,2]       [,3]      [,4] #> [1,] 0.0000000 0.0000000 0.00000000 0.1529476 #> [2,] 0.1529476 0.0360068 0.00000000 0.0000000 #> [3,] 0.0000000 0.1529476 0.09825795 0.0000000 #> [4,] 0.0000000 0.0000000 0.15294763 0.2539447"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"density-dependent-time-series-population-projections","dir":"Articles","previous_headings":"","what":"Density-dependent time series population projections","title":"Population Model Overview","text":"Project population forward time density-dependent constraints applied. Density-dependence acts life stages structured Beverton-Holt relationship. Compensatory density-dependence applied back-calculated solving equation sets global lambda value 1. projection runs stochasticity naturally hovers around Adult capacity (K) value. See van der Lee Koops (2020) additional details. Note point considering stressors cumulative effect dataframe (CE_df) set NULL.","code":"# Set the K.adj (K adjustment prior to pop model run) life_histories <- pop_mod_mat$life_histories # Mathematical expression of the transition matrix life_stages_symbolic <- pop_mod_mat$life_stages_symbolic # Mathematical expression of the density matrix density_stage_symbolic <- pop_mod_mat$density_stage_symbolic  # Run simple population projection - project forward through time baseline <-   Projection_DD(     M.mx = life_stages_symbolic,     # projection matrix expression     D.mx = density_stage_symbolic,     # density-dependence matrix     H.mx = NULL,     dat = life_histories,     # life history data     K = life_histories$Ka,     # initial pop size as stage-structure vector     Nyears = 100,     # years to run simulation     p.cat = 0,      # Probability of catastrophe     CE_df = NULL   )  names(baseline) #> [1] \"pop\"     \"N\"       \"lambdas\" \"vars\"    \"Cat.\"  # Time series of the population plot(baseline$pop, type = 'l') # Time series of lambda values plot(baseline$lambdas, type = 'l', ylab = \"lambda\", xlab = \"year\")"},{"path":"https://essatech.github.io/JoeModelCE/articles/population-model.html","id":"population-projections-with-ce-stressors","dir":"Articles","previous_headings":"","what":"Population Projections with CE Stressors","title":"Population Model Overview","text":"re-run population model projections, time add environmental stressors. Note simple example two imaginary stressors added CE_df1 CE_df2 fake data. stressors target fry capacity juvenile survival, respectively. first stressor (Stressor1) reduces fry carrying capacity 18% (0.82) second stressor decreases fry survival 5% (0.95). Rerun population model. Note plots black line baseline red line population projection run stressors included. example population supressed stressors included.","code":"# Very simple CE data frame of one watershed  # and two stressors (My Stressor1, My Stressor2) CE_df1 <- data.frame(HUC = 123,            Stressor = \"My Stressor1\",            dose = 123,      # Stressor magnitude            sys.cap = 0.82,  # Effect of vital rate (dose:response)            life_stage = \"fry_parr\",            parameter = \"capacity\",            Stressor_cat = \"My Stressor1\") # Second stressor - fake data CE_df2 <- data.frame(HUC = 123,                     Stressor = \"My Stressor2\",                     dose = 123,                     sys.cap = 0.95,                     life_stage = \"all_juv\",                     parameter = \"survival\",                     Stressor_cat = \"My Stressor2\") # Stressors dataframe CE_df <- rbind(CE_df1, CE_df2) ce_pop <- Projection_DD(M.mx = life_stages_symbolic,                         D.mx = density_stage_symbolic,                         H.mx = NULL,                         dat = life_histories,                         K = life_histories$Ka,                         Nyears = 100,                         p.cat = 0,                         CE_df = CE_df                         )   # Time series of the population with CE plot(ce_pop$pop, type = 'l', ylim = c(0, 200)) points(baseline$pop, type = 'l', col = \"red\") # Time series of lambda values plot(ce_pop$lambdas, type = 'l') points(baseline$lambdas, type = 'l', col = \"red\") # Ratio Relative system capacity baseline_sys_cap <- stats::median(baseline$pop$N[50:100]) ce_sys_cap <- stats::median(ce_pop$pop$N[50:100]) ce_sys_cap / baseline_sys_cap #> [1] 0.6624121"},{"path":"https://essatech.github.io/JoeModelCE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Bayly. Maintainer.","code":""},{"path":"https://essatech.github.io/JoeModelCE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Paul , Wilson K, Bayly M (2023). JoeModelCE: Joe Model Cumulative Effects. R package version 0.1.0, https://essatech.github.io/JoeModelCE/.","code":"@Manual{,   title = {JoeModelCE: Joe Model for Cumulative Effects},   author = {Andrew Paul and Kyle Wilson and Matthew Bayly},   year = {2023},   note = {R package version 0.1.0},   url = {https://essatech.github.io/JoeModelCE/}, }"},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"joemodelce-","dir":"","previous_headings":"","what":"Joe Model for Cumulative Effects","title":"Joe Model for Cumulative Effects","text":"Joe Model Cumulative Effects package (JoeModelCE) collection tools functions designed support implementation ‘Alberta Environmental Parks Cumulative Effects Assessment Joe Model’ source systems. JoeModelCE r package coupled flexible population modeling framework users may compare contrast simple watershed level roll-ups rigorous population models. package accompanied interactive web application. details see project website tutorial articles case studies. Shiny App Tutorial Video access tool","code":""},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"package-contributors","dir":"","previous_headings":"","what":"Package Contributors:","title":"Joe Model for Cumulative Effects","text":"broad collaboration Fisheries Oceans Canada (DFO), B.C. Ministry Environment Climate Change Strategy (ECCS), Alberta Environment Parks (AEP), Simon Fraser University (SFU). Contributors include: Dr. Eva Enders: Project Lead; DFO Research Scientist Dr. Jordan Rosenfeld: Project design coordination; ECCS Aquatic Ecologist Dr. Andrew Paul: Collaborator; AEP Research Scientist Dr. Kyle Wilson: Population model development. Isuru Dharmasena: Core Shiny app development Matthew Bayly, Marc Porter, Alejandra Urcelay, Julian Heavyside ESSA Technologies Ltd: R package Shiny app development support. Lauren Jarvis Pedro Gonzalez","code":""},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Joe Model for Cumulative Effects","text":"Run custom implementations Joe Model non-standard data formats. Batch-run integrated Joe Model/Population model across large datasets. Run sensitivity tests. Explore model extensions.","code":""},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Joe Model for Cumulative Effects","text":"easiest way install JoeModelCE package within RStudio IDE using remotes::install_github(). time package published CRAN default install.packages() work. Instead use remotes (devtools) install packge directly GitHub:","code":"# You may need to install remotes library(remotes) remotes::install_github(\"essatech/JoeModelCE\")"},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Joe Model for Cumulative Effects","text":"several vignettes available provide detailed guidance JoeModelCE usage common workflows. See articles availabe main JoeModelCE project page: Tutorial 1: Joe Model Overview Tutorial 2: Population Model Overview","code":""},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Joe Model for Cumulative Effects","text":"Please note JoeModelCE package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://essatech.github.io/JoeModelCE/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Joe Model for Cumulative Effects","text":"want contribute project can use git “fork pull request” workflow. Rebuilding R-package locally Helpful commands run reploy package locally Re-install R-package locally Helpful commands install package source","code":"# Build and test package library(testthat) library(devtools) rm(list = ls())      # Clear memory devtools::load_all() # Load functions devtools::document() # Update documentation devtools::test()     # Run tests devtools::check()    # Operating system test remove.packages(\"JoeModelCE\") # Remove local installation install.packages(getwd(), repos = NULL, type = \"source\") # library(JoeModelCE) # ?SystemCapacity"},{"path":"https://essatech.github.io/JoeModelCE/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 ESSA Technologies Ltd. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Beta Parameter — beta_param","title":"Estimate Beta Parameter — beta_param","text":"Estimates beta parameter given mean (rates) SD \"untruncated\" beta distribution.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Beta Parameter — beta_param","text":"","code":"beta_param(mean, sd)"},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Beta Parameter — beta_param","text":"mean Numeric. mean. sd Numeric. standard deviation.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Beta Parameter — beta_param","text":"Updated using analytical solution Kyle Wilson.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Beta Parameter — beta_param","text":"","code":"if (FALSE) { library(JoeModelCE) JoeModelCE::beta_param(0.8, 0.2)$beta }"},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_stretch_val.html","id":null,"dir":"Reference","previous_headings":"","what":"beta_stretch_val — beta_stretch_val","title":"beta_stretch_val — beta_stretch_val","text":"Calculate parameters stretched beta distribution.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/beta_stretch_val.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"beta_stretch_val — beta_stretch_val","text":"","code":"beta_stretch_val(mn, variance = NA, sigma = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/bh_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"bh_stage — bh_stage","title":"bh_stage — bh_stage","text":"bh_stage","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/bh_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bh_stage — bh_stage","text":"","code":"bh_stage(cr = 2, k = 100, x = 1)"},{"path":"https://essatech.github.io/JoeModelCE/reference/bh_stage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bh_stage — bh_stage","text":"functions used calculate density dependence stage-specific survival/transitions","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/bh_stage_f.html","id":null,"dir":"Reference","previous_headings":"","what":"bh_stage_f — bh_stage_f","title":"bh_stage_f — bh_stage_f","text":"survival/transitions. Classical BH function","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/bh_stage_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bh_stage_f — bh_stage_f","text":"","code":"bh_stage_f(alpha = NA, k = NA, Nt1 = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/ce.func.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply CSC Across dataframe — ce.func","title":"Apply CSC Across dataframe — ce.func","text":"Apply CSC Across dataframe","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/ce.func.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply CSC Across dataframe — ce.func","text":"","code":"ce.func(df)"},{"path":"https://essatech.github.io/JoeModelCE/reference/ce.func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply CSC Across dataframe — ce.func","text":"df dataframe","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/ce.func.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply CSC Across dataframe — ce.func","text":"ddply function calculate cumulative system capacity, df contains system capacity stressor given HUC simulation","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/cor.AR1.html","id":null,"dir":"Reference","previous_headings":"","what":"cor.AR1 — cor.AR1","title":"cor.AR1 — cor.AR1","text":"cor.AR1","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/cor.AR1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cor.AR1 — cor.AR1","text":"","code":"cor.AR1(n, rho, names = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/cor.CompSym.html","id":null,"dir":"Reference","previous_headings":"","what":"cor.CompSym — cor.CompSym","title":"cor.CompSym — cor.CompSym","text":"cor.CompSym","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/cor.CompSym.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cor.CompSym — cor.CompSym","text":"","code":"cor.CompSym(n, rho, names = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/d.vec.f.html","id":null,"dir":"Reference","previous_headings":"","what":"d.vec.f — d.vec.f","title":"d.vec.f — d.vec.f","text":"create vector density dependence effects using compensation ratios","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/d.vec.f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"d.vec.f — d.vec.f","text":"","code":"d.vec.f(df, Ks, N)"},{"path":"https://essatech.github.io/JoeModelCE/reference/dd.N.bh.html","id":null,"dir":"Reference","previous_headings":"","what":"dd.N.bh — dd.N.bh","title":"dd.N.bh — dd.N.bh","text":"Apply location stage-specific Beverton-Holt density dependent constraints","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/dd.N.bh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dd.N.bh — dd.N.bh","text":"","code":"dd.N.bh(dat = NA, t = NA, st = NA, N = NA, N_prev = NA, bh_dd_stages = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/dd_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"dd_calc — dd_calc","title":"dd_calc — dd_calc","text":"dd_calc","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/dd_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dd_calc — dd_calc","text":"","code":"dd_calc(dat, varNames, Nmat)"},{"path":"https://essatech.github.io/JoeModelCE/reference/dd_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"dd_stage — dd_stage","title":"dd_stage — dd_stage","text":"dd_stage","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/dd_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dd_stage — dd_stage","text":"","code":"dd_stage()"},{"path":"https://essatech.github.io/JoeModelCE/reference/esub.html","id":null,"dir":"Reference","previous_headings":"","what":"esub — esub","title":"esub — esub","text":"esub esub utility function","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/esub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"esub — esub","text":"","code":"esub(expr, sublist)  esub(expr, sublist)"},{"path":"https://essatech.github.io/JoeModelCE/reference/E_est.html","id":null,"dir":"Reference","previous_headings":"","what":"E_est — E_est","title":"E_est — E_est","text":"E_est","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/E_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"E_est — E_est","text":"","code":"E_est(N, dat)"},{"path":"https://essatech.github.io/JoeModelCE/reference/E_est.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"E_est — E_est","text":"Egg count - number egg produced pop annually","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/f_rand.html","id":null,"dir":"Reference","previous_headings":"","what":"f_rand — f_rand","title":"f_rand — f_rand","text":"f_rand","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/f_rand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"f_rand — f_rand","text":"","code":"f_rand(mn, sigma, rho)"},{"path":"https://essatech.github.io/JoeModelCE/reference/harm_k.html","id":null,"dir":"Reference","previous_headings":"","what":"harm_k — harm_k","title":"harm_k — harm_k","text":"harm_k","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/harm_k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"harm_k — harm_k","text":"","code":"harm_k(dat, stressors, Nstage, Korig)"},{"path":"https://essatech.github.io/JoeModelCE/reference/init_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"init_pop — init_pop","title":"init_pop — init_pop","text":"init_pop","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/init_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"init_pop — init_pop","text":"","code":"init_pop(mx, Nt, p.rep)"},{"path":"https://essatech.github.io/JoeModelCE/reference/init_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"init_pop — init_pop","text":"mx Population Matrix Nt Desire adult density p.rep maturity vector - 1: mature; 0: Juvenle; length Tmax + 1","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Joe Model Run — JoeModel_Run","title":"Joe Model Run — JoeModel_Run","text":"Runs Joe Model.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joe Model Run — JoeModel_Run","text":"","code":"JoeModel_Run(   dose = NA,   sr_wb_dat = NA,   MC_sims = 100,   stressors = NA,   adult_sys_cap = TRUE )"},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joe Model Run — JoeModel_Run","text":"dose dataframe. Stressor magnitude file exported StressorMagnitudeWorkbook(). sr_wb_dat list object. Stressor response workbook returned StressorResponseWorkbook(). MC_sims numeric. set number Monte Carlo simulations Joe Model. stressors (optional) character vector stressor names include Joe Model. Leave default value NA wish include stressors applicable adult life stage provide character vector stressors want run model subset stressors. adult_sys_cap Joe Model run variables identified adult system capacity. set number Monte Carlo simulations Joe model.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joe Model Run — JoeModel_Run","text":"Runs Joe Model cumulative system capacity across stressors watersheds. Note stressors applicable 'adult' Life_stages 'main_sheet' Stressor Response workbook included Joe Model","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joe Model Run — JoeModel_Run","text":"","code":"if (FALSE) { library(JoeModelCE)  # Load in the sample data from the reference Excel workbook filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\") filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\") # Stessor Magnitue and Doese Response Workbooks dose <- StressorMagnitudeWorkbook(filename = filename_rm) sr_wb_dat <- StressorResponseWorkbook(filename = filename_sr)  # Run the Joe Model jmr <- JoeModel_Run(dose = dose,              sr_wb_dat = sr_wb_dat,              MC_sims = 100)  # The Joe model holds cumulative effects data frame # and sc.dose.df for individual stressors names(jmr)  # Evaluate the cumulative system capacity summary(jmr$ce.df$CE) }"},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run_Batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Joe Model Run — JoeModel_Run_Batch","title":"Batch Joe Model Run — JoeModel_Run_Batch","text":"Batch version JoeModel_Run across scenarios input file.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run_Batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Joe Model Run — JoeModel_Run_Batch","text":"","code":"JoeModel_Run_Batch(scenarios = NA, dose = NA, sr_wb_dat = NA, MC_sims = 10)"},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run_Batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Joe Model Run — JoeModel_Run_Batch","text":"scenarios dataframe. Custom scenarios dataframe columns Scenario (scenario ID), Stressor (stressor name), Metric (either Mean SD) Multiplier (numeric multiplier). dose dataframe. Stressor magnitude file exported StressorMagnitudeWorkbook(). sr_wb_dat list object. Stressor response workbook returned StressorResponseWorkbook(). MC_sims numeric. set number Monte Carlo simulations Joe Model. set number Monte Carlo simulations Joe model.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run_Batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Batch Joe Model Run — JoeModel_Run_Batch","text":"Runs Joe Model cumulative system capacity across multiple scenarios. See vignette custom input file format.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/JoeModel_Run_Batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Joe Model Run — JoeModel_Run_Batch","text":"","code":"if (FALSE) { library(JoeModelCE) library(dplyr) library(ggplot2)  # Import stressor-magnitude workbook filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\") stressor_magnitude <- StressorMagnitudeWorkbook(filename = filename_rm, scenario_worksheet = \"natural_unc\")  # Import stressor-response workbook filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\")     stressor_response <- StressorResponseWorkbook(filename = filename_sr)  # Import the custom scenarios workbook filename_batch <- system.file(\"extdata\", \"scenario_batch_joe.xlsx\", package = \"JoeModelCE\") scenarios <- readxl::read_excel(filename_batch)   # Run the Joe Model with batch scenarios exp_dat <- JoeModel_Run_Batch(scenarios = scenarios, dose = stressor_magnitude, sr_wb_dat = stressor_response, MC_sims = 3)  #----------------------------------------------------- # Plot result for single HUC - filter by name or ID hub_sub <- exp_dat[exp_dat$HUC == 1701010204,] plot_title <- paste0(\"Watershed Name - \", 1701010204)  # Add mean and error bars (SD) hub_sb <- hub_sub %>% group_by(Scenario) %>% summarise(mean = mean(CE, na.rm = TRUE),       sd = sd(CE, na.rm = TRUE))  hub_sb$lower <- hub_sb$mean - hub_sb$sd hub_sb$upper <- hub_sb$mean + hub_sb$sd  ggplot(hub_sb, aes(x = mean, y = Scenario, xmin = lower, xmax = upper)) + geom_rect(aes(xmin = 0, xmax = 0.2, ymin = -Inf, ymax = Inf),       fill = \"pink\", alpha = 0.02) + geom_rect(aes(xmin = 0.2, xmax = 0.5, ymin = -Inf, ymax = Inf),       fill = \"orange\", alpha = 0.02) + geom_rect(aes(xmin = 0.5, xmax = 0.75, ymin = -Inf, ymax = Inf),       fill = \"yellow\", alpha = 0.02) + geom_rect(aes(xmin = 0.75, xmax = 1, ymin = -Inf, ymax = Inf),       fill = \"green\", alpha = 0.02) + geom_point() + geom_errorbarh(height=.2) + ggtitle(plot_title) + xlab(\"System Capacity (0 - 1)\") + ylab(\"Recovery Scenario\") + theme_bw()  #----------------------------------------------------- # Plot result for single scenario sen_sub <- exp_dat[exp_dat$Scenario == \"scenario_1\",] plot_title <- paste0(\"Scenario 1 ...\")  # Add mean and error bars (SD) sen_sb <- sen_sub %>% group_by(HUC) %>% summarise(mean = mean(CE, na.rm = TRUE),       sd = sd(CE, na.rm = TRUE))  sen_sb$lower <- sen_sb$mean - sen_sb$sd sen_sb$upper <- sen_sb$mean + sen_sb$sd  sen_sb$HUC <- as.character(sen_sb$HUC)  ggplot(sen_sb, aes(x = mean, y = HUC, xmin = lower, xmax = upper)) + geom_rect(aes(xmin = 0, xmax = 0.2, ymin = -Inf, ymax = Inf),       fill = \"pink\", alpha = 0.02) + geom_rect(aes(xmin = 0.2, xmax = 0.5, ymin = -Inf, ymax = Inf),       fill = \"orange\", alpha = 0.02) + geom_rect(aes(xmin = 0.5, xmax = 0.75, ymin = -Inf, ymax = Inf),       fill = \"yellow\", alpha = 0.02) + geom_rect(aes(xmin = 0.75, xmax = 1, ymin = -Inf, ymax = Inf),       fill = \"green\", alpha = 0.02) + geom_point() + geom_errorbarh(height=.2) + ggtitle(plot_title) + xlab(\"System Capacity (0 - 1)\") + ylab(\"Recovery Scenario\") + theme_bw() }"},{"path":"https://essatech.github.io/JoeModelCE/reference/K_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"K_adj — K_adj","title":"K_adj — K_adj","text":"K_adj","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/K_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K_adj — K_adj","text":"","code":"K_adj(replicates, dat, ncores, mx, dx, Nyears = 250, enviro)"},{"path":"https://essatech.github.io/JoeModelCE/reference/K_adj_old.html","id":null,"dir":"Reference","previous_headings":"","what":"K_adj_old — K_adj_old","title":"K_adj_old — K_adj_old","text":"K_adj_old","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/K_adj_old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K_adj_old — K_adj_old","text":"","code":"K_adj_old(replicates = 100, dat, ncores, mx, dx, Nyears = 250, enviro)"},{"path":"https://essatech.github.io/JoeModelCE/reference/mean_Response.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Response Function — mean_Response","title":"Mean Response Function — mean_Response","text":"Generate mean response function stressor.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/mean_Response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Response Function — mean_Response","text":"","code":"mean_Response(n.stressors = NA, str.list = NA, main = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/mean_Response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Response Function — mean_Response","text":"n.stressors Numeric. number stressors. str.list List object. list object dataframes stressor response relationships. main Dataframe. dataframe Main cover sheet stressor response relationships.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/mean_Response.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Response Function — mean_Response","text":"Creates functions interpolate mean system capacity, SD, lower limit upper limit.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/mean_Response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Response Function — mean_Response","text":"","code":"if (FALSE) {  library(JoeModelCE)  # Import of stressor response and magnitude workbook filename_rm <- system.file(\"extdata\", \"stressor_magnitude_unc_ARTR.xlsx\", package = \"JoeModelCE\") filename_sr <- system.file(\"extdata\", \"stressor_response_fixed_ARTR.xlsx\", package = \"JoeModelCE\") dose <- StressorMagnitudeWorkbook(filename = filename_rm, scenario_worksheet = \"natural_unc\") sr_wb_dat <- StressorResponseWorkbook(filename = filename_sr)   mean.resp.list <- mean_Response(   n.stressors = nrow(sr_wb_dat$main_sheet),   str.list = sr_wb_dat$sr_dat,   main = sr_wb_dat$main_sheet )  # Get the mean response function for the first stressor my_stressor <- sr_wb_dat$main_sheet$Stressors[[1]] my_stressor  # Look at the stressor-response curve sr_data <- sr_wb_dat$sr_dat[names(sr_wb_dat$sr_dat) == my_stressor][[1]]  plot(sr_data$value,      sr_data$mean_system_capacity,      type = 'b',      xlab = \"Raw Stressor Value\",      ylab = \"Mean System Capacity (%)\")  # The lookup the value from mean_Response() custom_function <- mean.resp.list[[1]][[1]]  # Input several raw stressor values and the function will # return the mean system capacity custom_function(20) custom_function(60) custom_function(80)  }"},{"path":"https://essatech.github.io/JoeModelCE/reference/mn.sd.huc.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative System Capacity Calculation — mn.sd.huc","title":"Cumulative System Capacity Calculation — mn.sd.huc","text":"Cumulative System Capacity Calculation","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/mn.sd.huc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative System Capacity Calculation — mn.sd.huc","text":"","code":"mn.sd.huc(df)"},{"path":"https://essatech.github.io/JoeModelCE/reference/mn.sd.huc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative System Capacity Calculation — mn.sd.huc","text":"df dataframe","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/mn.sd.huc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative System Capacity Calculation — mn.sd.huc","text":"Function calculate cumulative system capacity mean sd across simulations HUC series Monte Carlo sims","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/Nb_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Nb_est — Nb_est","title":"Nb_est — Nb_est","text":"Nb_est","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/Nb_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nb_est — Nb_est","text":"","code":"Nb_est(N, mat)"},{"path":"https://essatech.github.io/JoeModelCE/reference/pmx_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Project Matrix Forward in Time — pmx_eval","title":"Project Matrix Forward in Time — pmx_eval","text":"Project Matrix Forward Time","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pmx_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project Matrix Forward in Time — pmx_eval","text":"","code":"pmx_eval(mx, vars, byrow = TRUE)"},{"path":"https://essatech.github.io/JoeModelCE/reference/PopulationModel_Run.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Model Run — PopulationModel_Run","title":"Population Model Run — PopulationModel_Run","text":"Runs population model","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/PopulationModel_Run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Model Run — PopulationModel_Run","text":"","code":"PopulationModel_Run(   dose = NA,   sr_wb_dat = NA,   life_cycle_params = NA,   HUC_ID = NA,   n_years = 100,   MC_sims = 10,   stressors = NA,   output_type = \"full\",   habitat_dd_k = NULL )"},{"path":"https://essatech.github.io/JoeModelCE/reference/PopulationModel_Run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Model Run — PopulationModel_Run","text":"dose dataframe. Stressor magnitude dataset imported StressorMagnitudeWorkbook(). sr_wb_dat list object. Stressor response workbook imported StressorResponseWorkbook(). life_cycle_params dataframe. Life cycle parameters. HUC_ID character. HUC_ID subwatershed unit. n_years numeric. Number years run population. MC_sims numeric. set number Monte Carlo simulations Population Model. stressors (optional) character vector stressor names include Population Model. Leave default value NA wish include stressors applicable population model. output_type (optional) character. Set \"full\" data \"adults\" adult data. habitat_dd_k (optional) dataframe location stage-specific habitat capacity k values target species. used dataframe override capacity estimates","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/PopulationModel_Run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population Model Run — PopulationModel_Run","text":"Runs integrated population model within Joe Model stress-response framework. population model run single subwatershed unit (HUC_ID). Inputs PopulationModel_Run include stressor-response stressor magnitude workbooks well life cycle parameters table.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/PopulationModel_Run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Model Run — PopulationModel_Run","text":"","code":"if (FALSE) { library(JoeModelCE) }"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_ce_apply.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Model CE Application to Vital Rates — pop_model_ce_apply","title":"Population Model CE Application to Vital Rates — pop_model_ce_apply","text":"Utility function apply cumulative effects vital rates.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_ce_apply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Model CE Application to Vital Rates — pop_model_ce_apply","text":"","code":"pop_model_ce_apply(   dat = NA,   CE_df = NA,   alevin_stage = NA,   all_juv = NA,   fry_stages = NA,   fry_parr_stages = NA,   parr_stages = NA,   subadult_stages = NA,   adult_stages = NA )"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_ce_apply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Model CE Application to Vital Rates — pop_model_ce_apply","text":"dat Life history vital rates list object. CE_df Cumulative effects data frame. alevin_stage Alevin stage name. all_juv juvenile stage names. fry_stages Fry stage names. fry_parr_stages Fry parr stage names. parr_stages Parr stage names. subadult_stages Subadult stage names. adult_stages Adult stage names.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_ce_apply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Model CE Application to Vital Rates — pop_model_ce_apply","text":"modified dat vital rates object applying CE effects.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_K_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"K_adj — pop_model_K_adj","title":"K_adj — pop_model_K_adj","text":"Define K_adj value.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_K_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K_adj — pop_model_K_adj","text":"","code":"pop_model_K_adj(replicates = 100, dat, mx, dx, Nyears = 250)"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_K_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"K_adj — pop_model_K_adj","text":"replicates Number replicates dat Life history data mx projection matrix expression dx matrix density-dependence effect Nyears Years run simulation H.mx harm projection matrix","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_K_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"K_adj — pop_model_K_adj","text":"K_adj object make adjustments","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_K_adj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"K_adj — pop_model_K_adj","text":"Initialize populations find carrying capacity life stage. Carrying capacity defined adult stage estimated life-stages using stable-stage distribution (.e., carrying capacity adult stage set 100 carrying capacity stage (stage x) amount stage x necessary result 100 adults equilibrium conditions).","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Model Matrix Elements — pop_model_matrix_elements","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"Build population model matrix elements.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"","code":"pop_model_matrix_elements(pop_mod_setup = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"pop_mod_setup List. Object returned population_model_setup().","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"list object symbolic objects.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"intermediate setup function run population, outputs useful , especially eigen analyses. pop_model_matrix_elements() run pop_model_setup() must run Projection_DD(). Key outputs explore include density independent projection matrix, life histories symbolic representation matrix math density dependent density independent components.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_matrix_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Model Matrix Elements — pop_model_matrix_elements","text":"","code":"if (FALSE) {  # Load the JoeModelCE package. library(JoeModelCE)  filename_lc <- system.file(\"extdata\", \"life_cycles.csv\", package = \"JoeModelCE\") life_cycles <- read.csv(filename_lc)  # Setup objects for population model pop_mod_setup <- pop_model_setup(life_cycles = life_cycles)  # Build matrix elements for population model pop_mod_mat <- pop_model_matrix_elements(pop_mod_setup = pop_mod_setup) names(pop_mod_mat)  # A density independent projection matrix pop_mod_mat$projection_matrix    }"},{"path":[]},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_multi_huc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population model across multiple HUCs — pop_model_multi_huc","text":"","code":"pop_model_multi_huc(   dir_in,   dir_out,   dose_file = NA,   sr_wb_dat = NA,   life_cycle_params = NA,   HUC_ID = NA,   n_years = 100,   MC_sims = 10,   stressors = NA,   output_type = \"full\" )"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_multi_huc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population model across multiple HUCs — pop_model_multi_huc","text":"dir_in Character path directory JOEMODEL input files live. Make sure  directory holds: 1) stressor response Excel file; 2) stressor magnitude Excel file; 3) life cycle parameters Excel file dir_out character path directory new files saved dose_file character specified name Excel filename (extension .xlsx) stressor Response file (e.g.\"stressor_response_fixed_ARTR.xlsx\") sr_wb_dat character specified name Excel filename (extension .xlsx) stressor magnitude file (e.g.\"stressor_magnitude_unc_ARTR.xlsx\") life_cycle_params character specified name Excel filename (extension .xlsx) folds life cycle parameters (e.g.\"life_cycles.csv\") HUC_ID numeric vector holds IDs HUCs assessed n_years numeric number specifies hoe long JOEMODEL run.specified, default 300 MC_sims number specified many Monte Carlo (MC) simulations run HUC. MC run sample stressor's distribution return corresponding mean system capacity. specified; default 5 stressors character vector holds stressors want include running sensitivity analysis. stressors common HUCs output_type character set either adult \"full\". former return adult population. latter return population stages","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_multi_huc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population model across multiple HUCs — pop_model_multi_huc","text":"function return: Excel files hold population numbers. separate file created HUC. Within file, populations either 4 stages (opt output_type=\"full\") population adult phase (opt output_type=\"adult) saved time (baseline ce scenarios) Monte Carlo simulations. columns named indicate population stage, scenario (baseline ce), monte carlo simulation number associated output (e.g. column Stage_1_baseline_sim_1 = Population Stage 1 basline scenario simulation 1). function also returns list lambdas calculated time baseline ce scenarios across number Monte Carlo simulations specified. list element named corresponding HUC holds result particular HUC Runs PopulationModel_Run batch mode across different HUCS saved population outputs excel files saves lambdas list baseline ce scenarios.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_sens_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Model Sensitivity Test — pop_model_sens_test","title":"Population Model Sensitivity Test — pop_model_sens_test","text":"Runs OAT type sensitivity analysis parameters JOEMODEL. can handle multiple HUCs time. sensitivity reported baselie CE scenarios","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_sens_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Model Sensitivity Test — pop_model_sens_test","text":"","code":"pop_model_sens_test(   dir_in = NA,   dir_out = NA,   dose_file = \"stressor_response_fixed_ARTR.xlsx\",   sr_wb_dat = \"stressor_magnitude_unc_ARTR.xlsx\",   life_cycle_params = \"life_cycles.csv\",   HUC_ID = NA,   n_years = NA,   MC_sims = NA,   stressors = NA,   last_years = NA,   sens_perc_change = 10,   sens_param = NA )"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_sens_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Model Sensitivity Test — pop_model_sens_test","text":"dir_in Character path directory JOEMODEL input files live. Make sure  directory holds: 1) stressor response Excel file; 2) stressor magnitude Excel file; 3) life cycle parameters Excel file dir_out character path directory new files saved dose_file character specified name Excel filename (extension .xlsx) stressor Response file (e.g.\"stressor_response_fixed_ARTR.xlsx\") sr_wb_dat character specified name Excel filename (extension .xlsx) stressor magnitude file (e.g.\"stressor_magnitude_unc_ARTR.xlsx\") life_cycle_params character specified name Excel filename (extension .xlsx) folds life cycle parameters (e.g.\"life_cycles.csv\") HUC_ID numeric vector holds IDs HUCs assessed n_years numeric number specifies hoe long JOEMODEL run.specified, default 300 MC_sims number specified many Monte Carlo (MC) simulations run HUC. MC run sample stressor's distribution return corresponding mean system capacity. specified; default 5 stressors character vector holds stressors want include running sensitivity analysis. stressors common HUCs last_years numeric specifies number years prior last consider population reached stability . specified; assume last 20% years stable (e.g. n_years set 100; default stable years last 20 years). OAT sensitivity analysis consider population last years sens_perc_change numeric specifies percent change model parameters sensitivity analysis considered (e.g. specify 10 want test 10 percent change parameters tested impact population defined stable years). can specify -10 want see reducing parameter 10 percent impact stable populations. function assumes percent change across parameters.specified, default 10 (percent) sens_param character vector specifies JOEMODEL parameters like run OAT sensitivity analysis . Please report Name Parameter (e.g. report \"Nstage: \"Number life stages\"). specified; assume want run parameters EXCEPT Nstage parameter whose value life cycle parameters file set zero.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_sens_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Model Sensitivity Test — pop_model_sens_test","text":"function return: SA: list element holds median sensitivities JOEMODEL baseline CE runs given HUC. list number elements HUCs life_cycles_sens_analysis_HUCXXXXXXXXXX  set .csv files. HUC .csv file. saved dir_out","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_sens_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Model Sensitivity Test — pop_model_sens_test","text":"","code":"if (FALSE) { library(JoeModelCE) SA <- PopulationModel_Run_Sen(dir_in=\"C:/JOEMODEL\", dir_out=\"C:/JOEMODEL/Results\", dose_file = \"stressor_response_fixed_ARTR.xlsx\",                                sr_wb_dat = \"stressor_magnitude_unc_ARTR.xlsx\", life_cycle_params = \"life_cycles.csv\",          HUC_ID = c(1701010201, 1701010202), n_years = 300, MC_sims = 5, stressors = NA, last_years=20,         sens_perc_change=10, sens_param=c(\"k\",\"surv_1\", \"eps\", \"M.cv\"))         }"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Model Setup — pop_model_setup","title":"Population Model Setup — pop_model_setup","text":"Generate symbolic objects population model generate parameter matrices.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Model Setup — pop_model_setup","text":"","code":"pop_model_setup(life_cycles = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Model Setup — pop_model_setup","text":"life_cycles Data frame. Raw life cycles.csv data frame.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Model Setup — pop_model_setup","text":"list object symbolic objects.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/pop_model_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population Model Setup — pop_model_setup","text":"intermediate setup function run population, outputs useful , especially eigen analyses projection matrix. pop_model_setup() run pop_model_matrix_elements() Projection_DD(). Transition Matrix: Calculates stage-specific survivals transition rates, survival probabilities, transition probabilities. Initializes survival/transition rates subject stage-specific density-dependence. Checks excessive compensation ratios. Dataset life-histories: transition probabilities egg-survival, age-0 survival, stage-specific survival probabilities spawning events per year eggs-per-spawner number spawning intervals adult carrying capacity sex ratio","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/proc.html","id":null,"dir":"Reference","previous_headings":"","what":"proc — proc","title":"proc — proc","text":"proc proc utility function","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/proc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"proc — proc","text":"","code":"proc(e, env = parent.frame())  proc(e, env = parent.frame())"},{"path":"https://essatech.github.io/JoeModelCE/reference/Projection_DD.html","id":null,"dir":"Reference","previous_headings":"","what":"Project matrix with Density Dependence — Projection_DD","title":"Project matrix with Density Dependence — Projection_DD","text":"Project matrix model forward time density dependence.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/Projection_DD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project matrix with Density Dependence — Projection_DD","text":"","code":"Projection_DD(   M.mx = NA,   D.mx = NULL,   H.mx = NULL,   dat = NA,   Nyears = 100,   K = NA,   p.cat = NA,   CE_df = NULL,   K_adj = FALSE,   stage_k_override = NULL,   bh_dd_stages = NULL )"},{"path":"https://essatech.github.io/JoeModelCE/reference/Projection_DD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project matrix with Density Dependence — Projection_DD","text":"M.mx projection matrix expression D.mx matrix density-dependence effect H.mx harm projection matrix dat Life history data Nyears Years run simulation K population carrying Capacity p.cat Probability catastrophic event. CE_df Cumulative effect dataframe. Data frame identifying cumulative effects stressors targets (system capacity population parameter, , target life stages. K_adj Boolean. K_adj run. Defaults false. stage_k_override Vector K values fry (0), stage_1, stage_2 values etc. defaults NULL. set values override adult K value alternative DD mechanism. bh_dd_stages Character vector life stages c(\"dd_hs_0\", \"bh_stage_1\", \"bh_stage_2\", \"bh_stage_3\", ...) apply classical Beverton-Holt density-dependence. used place compensation ratios set. Use \"dd_hs_0\" egg--fry k, \"bh_stage_1\" fry stage_1 k \"bh_stage_2\" stage_1 stage_2 k etc. Densities capped value transition stage.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/Projection_DD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project matrix with Density Dependence — Projection_DD","text":"list object projected years, population size, lambda, fecundity, survival, catastrophic events.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/Projection_DD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project matrix with Density Dependence — Projection_DD","text":"Builds deterministic projection matrix using popbio::stable.stage initial parameters based arguments provided. Applies CE stressors appropriate targets based CE_df. population modeling components contained within function. Users define projection matrix, density-dependence matrix, harm projection matrix, life history parameters, years simulate, carrying capacity, catastrophic event probabilities cumulative effects data frame (CE_df). run function project population forward time. See vignette tutorial Population Model Overview details instructions.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/rbeta2.html","id":null,"dir":"Reference","previous_headings":"","what":"rbeta equivelent from TruncatedDistributions package — rbeta2","title":"rbeta equivelent from TruncatedDistributions package — rbeta2","text":"rbeta equivelent TruncatedDistributions package","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/rbeta2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbeta equivelent from TruncatedDistributions package — rbeta2","text":"","code":"rbeta2(n, shape1, shape2, ncp = 0)"},{"path":"https://essatech.github.io/JoeModelCE/reference/rtnorm_TruncatedDistributions.html","id":null,"dir":"Reference","previous_headings":"","what":"rtnorm from Truncated Distributions — rtnorm_TruncatedDistributions","title":"rtnorm from Truncated Distributions — rtnorm_TruncatedDistributions","text":"rtnorm Truncated Distributions","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/rtnorm_TruncatedDistributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rtnorm from Truncated Distributions — rtnorm_TruncatedDistributions","text":"","code":"rtnorm_TruncatedDistributions(n, mean = 0, sd = 1, a = -Inf, b = Inf)"},{"path":"https://essatech.github.io/JoeModelCE/reference/rtnorm_TruncatedDistributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rtnorm from Truncated Distributions — rtnorm_TruncatedDistributions","text":"rtnorm Truncated Distributions","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/s0_optim.f.html","id":null,"dir":"Reference","previous_headings":"","what":"s0_optim.f — s0_optim.f","title":"s0_optim.f — s0_optim.f","text":"s0_optim.f","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/s0_optim.f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"s0_optim.f — s0_optim.f","text":"","code":"s0_optim.f(s0, mx, dat, target.lambda)"},{"path":"https://essatech.github.io/JoeModelCE/reference/s0_optim.f.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"s0_optim.f — s0_optim.f","text":"Optimization fucntion - find YOY survival gives lambda","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/stage_probs.html","id":null,"dir":"Reference","previous_headings":"","what":"stage_probs — stage_probs","title":"stage_probs — stage_probs","text":"stage_probs","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/stage_probs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stage_probs — stage_probs","text":"","code":"stage_probs(x, y)"},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorMagnitudeWorkbook.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","title":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","text":"Extract stressor magnitude data sheet Excel workbook.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorMagnitudeWorkbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","text":"","code":"StressorMagnitudeWorkbook(filename = NA, scenario_worksheet = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorMagnitudeWorkbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","text":"filename string. Relative file name stressor magnitude Excel workbook. scenario_worksheet string. Worksheet name scenario.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorMagnitudeWorkbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","text":"stressor magnitude list object JoeModelCE","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorMagnitudeWorkbook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Stressor Magnitude Data from Excel Workbook — StressorMagnitudeWorkbook","text":"information data format requirements, see Data Upload section vignette.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorResponseWorkbook.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","title":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","text":"Extract stressor response data sheet Excel workbook.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorResponseWorkbook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","text":"","code":"StressorResponseWorkbook(filename = NA)"},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorResponseWorkbook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","text":"filename string. Relative file name stressor response Excel workbook.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorResponseWorkbook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","text":"list object main_sheet, stressor_names stressor response data frames (sr_dat).","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/StressorResponseWorkbook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Stressor Response Data from Excel Workbook — StressorResponseWorkbook","text":"information data format requirements, see Data Upload Results Export tab associated Shiny App. Uses readxl::read_excel() load workbook sheets: Main sheet: meta data / cover sheet indicating: stressor names categories interactions linkages scales approximation function type target life stages contribution survival capacity parameters stressor units target model (CE population models, ) additional stressor-response sheets workbook context specific stressor-response curve data sheet name must match stressor names Main sheet, otherwise \"Bad worksheet names\" error message. sheets must contain columns <stressor_name>, Mean System Capacity (%), SD, low.limit, .limit","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/SystemCapacity.html","id":null,"dir":"Reference","previous_headings":"","what":"System Capacity — SystemCapacity","title":"System Capacity — SystemCapacity","text":"Calculates system capacity stressor.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/SystemCapacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"System Capacity — SystemCapacity","text":"","code":"SystemCapacity(   f.dose.df,   f.main.df,   f.stressor.df,   f.mean.resp.list,   n.sims = 100 )"},{"path":"https://essatech.github.io/JoeModelCE/reference/SystemCapacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"System Capacity — SystemCapacity","text":"f.dose.df Stressor magnitude data frame returned StressorMagnitudeWorkbook(). f.main.df main_sheet list object returned StressorResponseWorkbook()$main_sheet. f.stressor.df Dose response data frame returned StressorResponseWorkbook()$sr_dat target stressor. f.mean.resp.list Response function list target variable returned mean_Response(). n.sims Number simulations generate. Defaults t0 100.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/SystemCapacity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"System Capacity — SystemCapacity","text":"SystemCapacity() calculates system capacity stressor. function takes data frame arguments stressor magnitudes dose responses plus list stressor-response approximation functions (f. local list data frame). Note: stressors multiple doses (Additive interaction).","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/s_rand.html","id":null,"dir":"Reference","previous_headings":"","what":"s_rand — s_rand","title":"s_rand — s_rand","text":"Function generate random survival rates","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/s_rand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"s_rand — s_rand","text":"","code":"s_rand(mn, cv, rho)"},{"path":"https://essatech.github.io/JoeModelCE/reference/tbeta_rnd.html","id":null,"dir":"Reference","previous_headings":"","what":"tbeta Random — tbeta_rnd","title":"tbeta Random — tbeta_rnd","text":"Returns N random estimates truncated beta distribution given vectors mean SD untruncated distribution system capacity.","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/tbeta_rnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tbeta Random — tbeta_rnd","text":"","code":"tbeta_rnd(mn_est, sd_est, low.limit = 0, up.limit = 1)"},{"path":"https://essatech.github.io/JoeModelCE/reference/tbeta_rnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tbeta Random — tbeta_rnd","text":"mn_est Vector mean values. sd_est Vector standard deviations. low.limit Numeric. Defaults 0. .limit Numeric. Defaults 1 .","code":""},{"path":"https://essatech.github.io/JoeModelCE/reference/tbeta_rnd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"tbeta Random — tbeta_rnd","text":"Function returns returns one random value mean sd value. run 0 1 values.","code":""}]
